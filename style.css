:root {
  /* Layout*/

  --wrapper-Mobile: 375px;
  --wrapper-Desktop: 1440px;

  /* Colors */

  /*Primary*/

  --Green-200: hsl(148, 38%, 91%);
  --Green-600: hsl(169, 82%, 27%);
  --Red: hsl(0, 66%, 54%);

  /*Neutral*/

  --White: hsl(0, 0%, 100%);
  --Grey-500: hsl(186, 15%, 59%);
  --Grey-900: hsl(187, 24%, 22%);

  /* Typography*/

  --base-Font-size: 16px;

  --font-weight-400: 400;
  --font-weight-700: 700;
}

/* BASIC LAYOUT*/

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

body {
  min-height: 100dvh;
  display: grid;
  place-items: center;
  font-family: "Karla", serif;
  background-color: var(--Green-200);
  accent-color: var(--Green-600);
}

form > * {
  /* border: 1px solid transparent; */
  margin-block-end: 1.25rem;
}

label {
  margin-block-end: 0.5rem;
  font-size: 0.85rem;
}

.wrapper {
  background-color: var(--White);
  border-radius: 12px;
  width: 100%;
  max-width: clamp(375px, 80%, 620px);
  margin: auto;
}

.input-name {
  display: block;
}

.fieldset-1 {
  display: flex;
  gap: 1rem;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
}

.fieldset-2 {
  display: flex;
  gap: 1rem;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
}

.fieldset-3 {
  display: flex;
  flex-wrap: wrap;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.fieldset-5 {
  display: flex;
  gap: 1rem;
  flex-wrap: wrap;
  flex-direction: row;
  justify-content: start;
  align-items: start;
  margin-left: 2rem;
  margin-block: 0.5rem;
  padding-block: 0.5rem;
}

.radio-wrap {
  width: 31rem;
  display: flex;
  flex-direction: row;
  gap: 1rem;
  justify-content: center;
  align-items: center;
}

#radio-error {
  display: block;
  align-self: flex-start;
  margin-left: 2rem;
}

legend {
  margin-block: 0.5rem;
}

@media (width < 700px) {
  .radio-wrap {
    width: 0;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    justify-content: center;
    align-items: center;
  }
}

/*MARK: /* VALIDATION */

#name:user-invalid,
#last-name:user-invalid,
#email:user-invalid,
#text-area:user-invalid,
#check-box:user-invalid {
  border: 1px solid red;
}

/* Style the label not radio button it self,  when it contains an invalid radio button */

.label-wrap:has(.radio-btn:user-invalid) {
  border-color: var(--Red);
}

/*
  That's fantastic! ðŸŽ‰ I'm glad to hear that .label-wrap:has(.radio-btn:user-invalid) 
  is working perfectly for you! Itâ€™s such a clean and modern way to handle
  styling based on the state of child elements, and itâ€™s great to see it in action.
  */

.error {
  color: var(--Red);
}

.active {
  display: block;
  font-size: 0.85rem;
  padding: 0;
  margin: 0;
}

/* BLOCK */

form {
  display: flex;
  flex-direction: column;
  padding: 1rem;
  margin-inline: 1rem;
  margin-block: 1rem;
}

fieldset {
  border: transparent;
}

.name {
  width: 15rem;
}

.last-name {
  width: 15rem;
}

#name {
  width: 100%;
  height: 2.5rem;
  border-radius: 7px;
  border: 1px solid var(--Grey-500);
}

#name:active {
  border: 1px solid var(--Green-600);
}

#last-name {
  width: 100%;
  height: 2.5rem;
  border-radius: 7px;
  border: 1px solid var(--Grey-500);
}

.input-name {
  font-size: 0.75rem;
}

#email {
  width: 100%;
  height: 2.5rem;
  border-radius: 7px;
  border: 1px solid var(--Grey-500);
}

.emial-wrap {
  width: 31rem;
}

@media (width < 700px) {
  .emial-wrap {
    width: 15rem;
  }
}

.text-area-wrap {
  width: 31rem;
}

#text-area {
  display: block;
  height: 100px;
  width: 100%;
  border-radius: 7px;
  border: 1px solid var(--Grey-500);
  resize: none;
}

.submit-btn {
  border: transparent;
  background-color: var(--Green-600);
  border-radius: 7px;
  height: 3rem;
  color: var(--White);
  font-weight: var(--font-weight-700);
  padding: 1rem;
  margin-inline: 1.25rem;
  cursor: pointer;
  transition: 0.3s ease-in-out;
}

.submit-btn:hover {
  transform: translateY(-2px);
}

h1 {
  font-size: 1.5rem;
  margin-left: 2rem;
}

legend {
  font-size: 0.75rem;
  margin-left: 2rem;
}

#name:focus,
#last-name:focus,
#email:focus,
#text-area:focus {
  outline: none;
  border: 2px solid var(--Green-600);
}

#name,
#last-name,
#email,
#text-area {
  transition: border 0.2s ease-in-out;
  cursor: pointer;
  padding: 0.5rem;
}

/*added ai  to style radios */

/* Style the radio button itself */

.radio-btn {
  appearance: none;
  width: 1.25rem;
  height: 1.25rem;
  border: 2px solid var(--Grey-500);
  border-radius: 50%;
  margin-right: 0.75rem;
  position: relative;
  cursor: pointer;
}

/* Style the checked state */
.radio-btn:checked {
  border-color: var(--Green-600);
  background-color: var(--White);
}

/* Create the inner circle when checked */
.radio-btn:checked::after {
  content: "";
  width: 0.75rem;
  height: 0.75rem;
  background: var(--Green-600);
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
}

/* Style the hover state */
.radio-btn:hover {
  border-color: var(--Green-600);
}

/* Style the focus state */
.radio-btn:focus {
  outline: none;
  border-color: var(--Green-600);
  box-shadow: 0 0 0 2px var(--Green-200);
}

/* Style the label wrapper */
.label-wrap {
  display: flex;
  align-items: center;
  border: 1px solid var(--Grey-500);
  padding: 0.5rem;
  border-radius: 7px;
  width: 15rem;
  height: 2.5rem;
  cursor: pointer;
  transition: 0.2s ease-in-out;
}

/* Style the label wrapper when radio is checked */
.radio-btn:checked + .label-wrap,
.label-wrap:has(.radio-btn:checked) {
  border-color: var(--Green-600);
  background-color: var(--Green-200);
}
